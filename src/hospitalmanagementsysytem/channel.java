package hospitalmanagementsysytem;

//import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JDateChooser;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kobinath
 */
public class channel extends javax.swing.JFrame {

    /**
     * Creates new form employee
     */
    public channel() {
        initComponents();
        table_update();
        autoId();
        LoadPatient();

        //BC PICTURE
        ImageIcon myImage1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/SRC/BC.jpeg")));
        Image img10 = myImage1.getImage();
        Image img20 = img10.getScaledInstance(jLabel7.getWidth(), jLabel7.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon ii = new ImageIcon(img20);
        jLabel7.setIcon(ii);

        //bill logo bc PICTURE
        ImageIcon myImage134 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/SRC/SmallPanel.jpg")));
        Image img1034 = myImage134.getImage();
        Image img2034 = img1034.getScaledInstance(jLabel9.getWidth(), jLabel9.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon ii34 = new ImageIcon(img2034);
        jLabel9.setIcon(ii34);

        //bill logo PICTURE
        ImageIcon myImage13 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/SRC/HMS.Logo .JPEG")));
        Image img103 = myImage13.getImage();
        Image img203 = img103.getScaledInstance(lbllogo.getWidth(), lbllogo.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon ii3 = new ImageIcon(img203);
        lbllogo.setIcon(ii3);

        //bill logo Text PICTURE
        ImageIcon myImage135 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/SRC/Suwasewana Text.png")));
        Image img1035 = myImage135.getImage();
        Image img2035 = img1035.getScaledInstance(suText.getWidth(), suText.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon ii35 = new ImageIcon(img2035);
        suText.setIcon(ii35);

    }

    Connection con1;
    PreparedStatement pst;
    PreparedStatement pst1;
    ResultSet rs;

    DefaultTableModel model = new DefaultTableModel();

    public class Patient {

        String id;
        String name;

        public Patient(String id, String name) {
            this.id = id;
            this.name = name;
        }

        public String toString() {
            return name;
        }
    }

    public class Doctor {

        String id;
        String name;

        public Doctor(String id, String name) {
            this.id = id;
            this.name = name;
        }

        public String toString() {
            return name;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        time1 = new cambodia.raven.Time();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtchno = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtpatient = new javax.swing.JComboBox();
        txtdoctor = new javax.swing.JComboBox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        cmbDocSpec = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        txtTime = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        lblRoom = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        RistPannel = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        suText = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lblBillAppoNo = new javax.swing.JLabel();
        lblBillPName = new javax.swing.JLabel();
        lblBillPNo = new javax.swing.JLabel();
        lblBillDate = new javax.swing.JLabel();
        lblBillRoomNo = new javax.swing.JLabel();
        lblBillDocN = new javax.swing.JLabel();
        lblDOCSpe = new javax.swing.JLabel();
        lblDocFee = new javax.swing.JLabel();
        lblBillHos = new javax.swing.JLabel();
        lblBillTotal = new javax.swing.JLabel();
        lblBillTime = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        time1.setTextRefernce(txtTime);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Apointment Management");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Channel No");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Doctor Name");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Patient Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        txtchno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtchno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(txtchno, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 140, 30));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Room No");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Channel Time");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, 30));

        txtpatient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtpatient.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpatientActionPerformed(evt);
            }
        });
        jPanel2.add(txtpatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 400, 30));

        txtdoctor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtdoctor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtdoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdoctorActionPerformed(evt);
            }
        });
        jPanel2.add(txtdoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 220, 30));

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 400, 30));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Channel Date");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, 30));

        cmbDocSpec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbDocSpec.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cardiologist", "Dermatologist", "Neurologist", "Orthopedicsurgeon", "Pediatrician", "Pulmonologist" }));
        cmbDocSpec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDocSpecActionPerformed(evt);
            }
        });
        jPanel2.add(cmbDocSpec, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 160, 30));

        jButton3.setText("Set Time");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 130, 30));

        txtTime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel2.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 190, 30));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Select Room");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 160, 30));

        lblRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRoom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 150, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/SmallPanel.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 280));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 625, 280));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Channel No", "Doctor Name", "Patient Name", "Room No", "Channel Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 625, 280));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Create");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 720, 137, 36));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 720, 137, 36));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setText("Clear & Exit");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 720, 137, 36));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RistPannel.setBackground(new java.awt.Color(255, 255, 255));
        RistPannel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbllogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/HMS.Logo .JPEG"))); // NOI18N
        RistPannel.add(lbllogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 130, 120));

        suText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/Suwasewana Text.png"))); // NOI18N
        suText.setText("jLabel11");
        RistPannel.add(suText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 354, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("APPOINTMENT NO");
        RistPannel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 140, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("PATIENT NAME");
        RistPannel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 120, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("PATIENT NO");
        RistPannel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 110, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("APPOINTMENT DATE/TIME");
        RistPannel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 190, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("ROOM  NO");
        RistPannel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 100, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("CONSULTANT");
        RistPannel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 120, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("WELCOME TO SUWASEWANA HOSPITAL CHANNELING CENTER");
        RistPannel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 420, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("CHANNEL RECEIPT (CALL APP)");
        RistPannel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 220, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("SPECIALITY");
        RistPannel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 100, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("DOCTOR'S FEE");
        RistPannel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 130, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Hospital FEE");
        RistPannel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 110, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("TOTAL FEE");
        RistPannel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 100, -1));

        lblBillAppoNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillAppoNo.setText("jLabel23");
        RistPannel.add(lblBillAppoNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 80, -1));

        lblBillPName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillPName.setText("jLabel23");
        RistPannel.add(lblBillPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 80, -1));

        lblBillPNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillPNo.setText("jLabel23");
        RistPannel.add(lblBillPNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 80, -1));

        lblBillDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillDate.setText("jLabel23");
        RistPannel.add(lblBillDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 80, -1));

        lblBillRoomNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillRoomNo.setText("jLabel23");
        RistPannel.add(lblBillRoomNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 80, -1));

        lblBillDocN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillDocN.setText("jLabel23");
        RistPannel.add(lblBillDocN, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 80, -1));

        lblDOCSpe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDOCSpe.setText("jLabel23");
        RistPannel.add(lblDOCSpe, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 450, 80, -1));

        lblDocFee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDocFee.setText("jLabel23");
        RistPannel.add(lblDocFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 80, -1));

        lblBillHos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillHos.setText("600.00");
        RistPannel.add(lblBillHos, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 510, 80, -1));

        lblBillTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillTotal.setText("jLabel23");
        RistPannel.add(lblBillTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, 80, -1));

        lblBillTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBillTime.setText("jLabel23");
        RistPannel.add(lblBillTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 80, -1));

        jPanel3.add(RistPannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 590, 610));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/SmallPanel.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 650));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 90, 650, 650));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Print");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 720, 137, 36));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Creat Receipt");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 150, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/BC.jpeg"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 0, 1380, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void LoadPatient() {

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
            pst = con1.prepareStatement("select * from patient");
            rs = pst.executeQuery();
            txtpatient.removeAllItems();

            while (rs.next()) {
                String id1 = rs.getString(1);

                txtpatient.addItem(new Patient(rs.getString(1), rs.getString(3)));
            }

        } catch (ClassNotFoundException ex) {
            //  Logger.getLogger(channel.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            //   Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadDoctor() {

        try {
            String dSpec = cmbDocSpec.getSelectedItem().toString();
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
            pst = con1.prepareStatement("select * from doctor WHERE Specialization='" + dSpec + "'");
            rs = pst.executeQuery();
            txtdoctor.removeAllItems();

            while (rs.next()) {
                String id1 = rs.getString(1);

                txtdoctor.addItem(new Doctor(rs.getString(1), rs.getString(2)));
            }

        } catch (ClassNotFoundException ex) {
            //  Logger.getLogger(channel.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            //   Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void autoId() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
            Statement s = con1.createStatement();
            ResultSet rs = s.executeQuery("SELECT MAX(id) FROM channel");
            rs.next();
            rs.getString("MAX(id)");
            if (rs.getString("MAX(id)") == null) {
                txtchno.setText("CH001");
            } else {
                long id = Long.parseLong(rs.getString("MAX(id)").substring(2, rs.getString("MAX(id)").length()));
                id++;
                txtchno.setText("CH" + String.format("%03d", id));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void table_update() {
        int CC;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
            //pst = con1.prepareStatement("select c.id,c.dname,p.name,c.roomno,c.date from channel c,patient p where c.pname = p.id and p.status = 'Active' ");       

            pst = con1.prepareStatement("SELECT * FROM channel where status = 'Active' ");
            ResultSet Rs = pst.executeQuery();
            ResultSetMetaData RSMD = Rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
            DFT.setRowCount(0);

            while (Rs.next()) {
                Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("id"));
                    v2.add(Rs.getString("doctorName"));
                    v2.add(Rs.getString("pname"));
                    v2.add(Rs.getString("roomno"));
                    v2.add(Rs.getString("date"));
                    v2.add(Rs.getString("Time"));

                }
                DFT.addRow(v2);
            }
        } catch (Exception e) {
        }
    }


    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        String drno = txtchno.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
            pst = con1.prepareStatement("delete from channel where id =?");
            pst.setString(1, drno);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Channel Channelledddd");

            table_update();
            jButton5.setEnabled(true);
            autoId();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            String x = "Avaliable";
            String rno = lblRoom.getText();
            pst = con1.prepareStatement("UPDATE rooms set Statues=? WHERE Room_ID =?");
            pst.setString(1, x);
            pst.setString(2, rno);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, " Room Statues UPDATED successfully ");

            table_update();
            jButton2.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(hospitalmanagementsysytem.Doctor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnCancelActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (txtchno.getText() == null || txtdoctor.getSelectedItem() == null || txtpatient.getSelectedItem() == null || txtpatient.getSelectedItem() == null || txtdoctor.getSelectedItem() == null || lblRoom.getText() == null || jDateChooser1.getDate() == null || txtTime.getText() == null) {
            JOptionPane.showMessageDialog(this, "Fill all Requard Informations");
        } else {

            String chno = txtchno.getText();
            String drname = txtdoctor.getSelectedItem().toString();
            String pname = txtpatient.getSelectedItem().toString();
            Patient pa = (Patient) txtpatient.getSelectedItem();
            Doctor da = (Doctor) txtdoctor.getSelectedItem();

            String room = lblRoom.getText();
            SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
            String date = Date_Format.format(jDateChooser1.getDate());
            String time = txtTime.getText();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/gp_hms", "root", "");
                pst = con1.prepareStatement("insert into channel(id,d_id,doctorName,p_id,pname,roomno,date,Time,status)values(?,?,?,?,?,?,?,?,'Active')");

                pst.setString(1, chno);
                pst.setString(2, da.id);
                pst.setString(3, drname);
                pst.setString(4, pa.id);
                pst.setString(5, pname);
                pst.setString(6, room);
                pst.setString(7, date);
                pst.setString(8, time);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Channel Createdddddddddd");
                table_update();

                try {
                    String x = "Unavaliable";
                    String rno = lblRoom.getText();
                    pst = con1.prepareStatement("UPDATE rooms set Statues=? WHERE Room_ID =?");
                    pst.setString(1, x);
                    pst.setString(2, rno);
                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, " Room Statues UPDATED successfully ");

                    table_update();

                    table_update();

                    jButton2.setEnabled(true);

                } catch (SQLException ex) {
                    Logger.getLogger(hospitalmanagementsysytem.Doctor.class.getName()).log(Level.SEVERE, null, ex);
                }

                autoId();
                txtchno.setText("");
                txtdoctor.setSelectedIndex(-1);
                txtpatient.setSelectedIndex(-1);

                lblRoom.setText("");

                JDateChooser dateChooser = new JDateChooser();
                dateChooser.setCalendar(null);

                autoId();
                txtdoctor.requestFocus();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int selectIndex = jTable1.getSelectedRow();

        txtchno.setText(d1.getValueAt(selectIndex, 0).toString());
        txtdoctor.setSelectedItem(d1.getValueAt(selectIndex, 1).toString());
        txtpatient.setSelectedItem(d1.getValueAt(selectIndex, 2).toString());
        lblRoom.setText(d1.getValueAt(selectIndex, 3).toString());

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        int SelectIndex = 0;
        Date date = null;
        try {
            date = dateFormat.parse(d1.getValueAt(SelectIndex, 6).toString());
        } catch (ParseException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDateChooser1.setDate(date);

        jButton5.setEnabled(false);


    }//GEN-LAST:event_jTable1MouseClicked

    private void txtpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpatientActionPerformed

    private void txtdoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdoctorActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        this.dispose();


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ViewAvaliableRooms n = new ViewAvaliableRooms();
        n.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        time1.showPopup();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");

        job.setPrintable(new Printable() {
            public int print(Graphics pg, PageFormat pf, int pageNum) {
                pf.setOrientation(PageFormat.LANDSCAPE);
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }

                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.47, 0.47);

                RistPannel.print(g2);

                return Printable.PAGE_EXISTS;

            }
        });
        boolean ok = job.printDialog();
        if (ok) {
            try {

                job.print();
            } catch (PrinterException ex) {
                ex.printStackTrace();
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (txtchno.getText() == null || txtdoctor.getSelectedItem() == null || txtpatient.getSelectedItem() == null || txtpatient.getSelectedItem() == null || txtdoctor.getSelectedItem() == null || lblRoom.getText() == null || jDateChooser1.getDate() == null || txtTime.getText() == null) {
            JOptionPane.showMessageDialog(this, "Fill all Requard Informations");
        } else {
        
        try {
            // TODO add your handling code her
            Class.forName("com.mysql.jdbc.Driver");
            Statement s = null;
            try {
                s = con1.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String pn = txtpatient.getSelectedItem().toString();
            ResultSet rs = null;
            try {
                rs = s.executeQuery("SELECT * FROM patient where Name ='" + pn + "'");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                rs.next();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String x = null;
            try {
                x = rs.getString("PatientNo");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            lblBillPNo.setText(x);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // TODO add your handling code her
            Class.forName("com.mysql.jdbc.Driver");
            Statement s = null;
            try {
                s = con1.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String pn = txtdoctor.getSelectedItem().toString();
            ResultSet rs = null;
            try {
                rs = s.executeQuery("SELECT * FROM doctor where DoctorName ='" + pn + "'");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                rs.next();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String x = null;
            try {
                x = rs.getString("Specialization");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            lblDOCSpe.setText(x);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // TODO add your handling code her
            Class.forName("com.mysql.jdbc.Driver");
            Statement s = null;
            try {
                s = con1.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String pn = txtdoctor.getSelectedItem().toString();
            ResultSet rs = null;
            try {
                rs = s.executeQuery("SELECT * FROM doctor where DoctorName ='" + pn + "'");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                rs.next();
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String x = null;
            try {
                x = rs.getString("ChannelFee");
            } catch (SQLException ex) {
                Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
            }
            lblDocFee.setText(x);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(channel.class.getName()).log(Level.SEVERE, null, ex);
        }

        lblBillAppoNo.setText(txtchno.getText());
        lblBillPName.setText(txtpatient.getSelectedItem().toString());
        SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
        String date = Date_Format.format(jDateChooser1.getDate());
        lblBillDate.setText(date);
        lblBillTime.setText(txtTime.getText());
        lblBillRoomNo.setText(lblRoom.getText());
        lblBillDocN.setText(txtdoctor.getSelectedItem().toString());
        Double docfee = Double.parseDouble(lblDocFee.getText());
        Double hosfee = Double.parseDouble(lblBillHos.getText());
        double total = docfee + hosfee;
        lblBillTotal.setText(String.valueOf(total));
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmbDocSpecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDocSpecActionPerformed
        // TODO add your handling code here:
        LoadDoctor();
    }//GEN-LAST:event_cmbDocSpecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            //  java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            //java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            // java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            // java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new channel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel RistPannel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox cmbDocSpec;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBillAppoNo;
    private javax.swing.JLabel lblBillDate;
    private javax.swing.JLabel lblBillDocN;
    private javax.swing.JLabel lblBillHos;
    private javax.swing.JLabel lblBillPName;
    private javax.swing.JLabel lblBillPNo;
    private javax.swing.JLabel lblBillRoomNo;
    private javax.swing.JLabel lblBillTime;
    private javax.swing.JLabel lblBillTotal;
    private javax.swing.JLabel lblDOCSpe;
    private javax.swing.JLabel lblDocFee;
    public static javax.swing.JLabel lblRoom;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JLabel suText;
    private cambodia.raven.Time time1;
    private javax.swing.JTextField txtTime;
    private javax.swing.JLabel txtchno;
    private javax.swing.JComboBox txtdoctor;
    private javax.swing.JComboBox txtpatient;
    // End of variables declaration//GEN-END:variables
}
